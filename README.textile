h1. United Nations Sanctions Committees Network Visualization

Interim deployment (i.e., demo): "https://al-qaida-viz.herokuapp.com/":https://al-qaida-viz.herokuapp.com/

U.N. website: "http://www.un.org/sc/committees/1267/":http://www.un.org/sc/committees/1267/
U.N. Sanctions List in XML format: "http://www.un.org/sc/committees/consolidated.xml":http://www.un.org/sc/committees/consolidated.xml

Development url: "http://localhost:63342/aq-list-viz/index.html":http://localhost:63342/aq-list-viz/index.html

Note: This application is in the development stage and exists in an incomplete state.  For the time being, do not rely this application as the sole basis for any extreme, irrevocable field operations in the defense of freedom.

h2.  Preparing the data

Most U.N. sanctions committees publish a list of sanctioned parties to the Internet in an XML file.  First we download these files.

Then we convert each XML file to JSON format.

Alternative step for the TAC application: Using the AQList-to-d3.xsl stylesheet, transform the AQList.xml to the AQ-d3.xml format.  Convert the AQ-d3.xml file to JSON with the following filename: al-qaeda.json, and put the new JSON file in the data directory.

Remove the root node from the al-qaida.json file.
Make sure the al-qaida.json data file start off like this:

<pre>
{
  "nodes": [
    {
      "match": 1,
      "name": "Fahd Mohammed Ahmed al-Quso (no longer listed)",
      "artist": "QI.A.288.10",
      "id": "QI.A.288.10",
      "playcount": 100
    }, {
    ...
    }
</pre>

h2. Running

Running apache2 on codio.
http://shadow-context.codio.io:3000/
or

Running build-in HTTP server on custom port 63342 in WebStorm.
http://localhost:63342/aqlist-visualization/index.html

Running in xampp/tomcat/webapps.

h2.  To Do

Import the narrative pages and collect additional nodes.  Nodes represent individuals or entities.
Add click to documentation for each node, including images of bad guys.
Add representations of financial links to terror involving, say, "Union Bank of Switzerland":http://www.bloomberg.com/apps/news?pid=newsarchive&sid=aLhArWSlGNQQ&refer=europe.
Find a way to visualize a gynormous set of links between nodes.
Figure out how to do SPARQL queries on related data sets.  SPARQL (pronounced "sparkle", a recursive acronym for SPARQL Protocol and RDF Query Language) is an RDF query language, that is, a semantic query language for databases, able to retrieve and manipulate data stored in Resource Description Framework (RDF) format.
